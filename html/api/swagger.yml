swagger: "2.0"
info:
  version: "1.0.0"
  title: Contax API
  description: Control users and contacts
host: contax.ml
basePath: /api
schemes:
  - http
paths:
  /login.php:
    post:
      tags:
        - Users
      description: Logs in user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: loginItem
          description: Login
          schema:
            $ref: "#/definitions/Login"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserData"
        404:
          description: URL Not Found
          schema:
            $ref: '#/definitions/404Response'
  /editcontact.php:
    post:
      tags:
        - Contacts
      description: Edits the contacts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: contactItem
          description: Edit Contact
          schema:
            $ref: '#/definitions/newContact'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/simpleResponse'
        404:
          description: URL Not Found
          schema:
            $ref: '#/definitions/404Response'
  /signup.php:
    post:
      tags:
        - Users
      description: Registers user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: contactItem
          description: Signup
          schema:
            $ref: '#/definitions/Register'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/registerResponse'
        404:
          description: URL Not Found
          schema:
            $ref: '#/definitions/404Response'
  /search.php:
    post:
      tags:
        - Contacts
      description: Returns list of users matching search string
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: searchParameters
          description: Search parameters
          schema:
            $ref: "#/definitions/searchParams"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/contactTable"
        404:
          description: URL Not Found
          schema:
            $ref: "#/definitions/404Response"
  /deleteContact.php:
    post:
      tags:
        - Contacts
      description: Deletes contact by phone number
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: deleteParameters
          description: Delete parameters
          schema:
            $ref: "#/definitions/deleteParams"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/simpleResponse"
        404:
          description: URL Not Found
          schema:
            $ref: "#/definitions/404Response"
  /addContact.php:
    post:
      tags:
        - Contacts
      description: Adds contact using at least a first and last name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: addContactParameters
          description: addContact Parameters
          schema:
            $ref: "#/definitions/addContactParams"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/successResponse"
        404:
          description: URL Not Found
          schema:
            $ref: "#/definitions/404Response"

definitions:
  404Response:
    type: object
    properties:
      status:
        type: integer
        example: 404
      message:
        type: string
        example: Bad Request
  simpleResponse:
    type: object
    properties:
      status:
        type: string
        example: error
      message:
        type: string
        example: Invalid input
  Login:
    type: object
    properties:
      login:
        type: string
        example: joe
      password:
        type: string
        example: joe
  Register:
    type: object
    properties:
      firstName:
        type: string
        example: joe
      lastName:
        type: string
        example: joe
      login:
        type: string
        example: joe
      password:
        type: string
        example: joe
  registerResponse:
    type: object
    properties:
      id:
        type: integer
        example: 1
      firstName:
        type: string
        example: joe
      lastName:
        type: string
        example: joe
      login:
        type: string
        example: joe
      password:
        type: string
        example: joe
      status:
        type: string
        example: success
      message:
        type: string
        example: 
  newContact:
    type: object
    properties:
      firstName:
        type: string
        example: john
      lastName:
        type: string
        example: password123
      oldPhone:
        type: string
        example: 1231231234
      newPhone:
        type: string
        example: 1231231231
  UserData:
    type: object
    properties:
      id:
        type: integer
        example: 1
      firstName:
        type: string
        example: joe
      lastName:
        type: string
        example: joe
      status:
        type: string
        example: success
      message:
        type: string
        example: 
      
  searchParams:
    type: object
    properties:
      id:
        type: string
        example: "1"
      firstName:
        type: string
        example: John
      lastName:
        type: string
        example: Watson
      searchStr:
        type: string
        example: john
  contactTable:
    type: object
    properties:
      status:
        type: string
        example: success
      message:
        type: string
        example:
      table:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 1
            userId:
              type: integer
              example: 1
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Watson
            phone:
              type: string
              example: "4074206969"
            email:
              type: string
              example: john@example.com
            dateCreated:
              type: string
              example: "2021-01-06"
  deleteParams:
    type: object
    properties:
      id:
        type: string
        example: "1"
      firstName:
        type: string
        example: John
      lastName:
        type: string
        example: Watson
      phone:
        type: string
        example: "4074206969"
  addContactParams:
    type: object
    properties:
      userId:
        type: integer
        example: 1
      firstname:
        type: string
        example: Peter
      lastname:
        type: string
        example: Yosemity
      phonenumber:
        type: string
        example: "9958576123"
      email:
        type: string
        example: someone@something.com
      date:
        type: string
        example: "2021-05-23"
  successResponse:
    type: object
    properties:
      status:
        type: string
        example: Success
      message:
        type: string
        example: ""
